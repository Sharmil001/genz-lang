export function genZErrorMessage(type: "lex" | "parse" | "runtime", error: any): string {
  const line = error?.token?.startLine ?? error?.line ?? "??";
  const col = error?.token?.startColumn ?? error?.column ?? "??";

  const lexMessages = [
    `ğŸ“‰ Bruh, fix yo' grammar`,
    `ğŸ’€ Sus`,
    `ğŸ§¨ Syntax Error`
  ];

  const parseMessages = [
    `ğŸš§ Syntax looking like spaghetti at line ${line}, col ${col}.`,
    `ğŸ‘€ My parser just looked at line ${line} and said "nah fam".`,
    `ğŸ¥´ Line ${line}:${col} really vibinâ€™ wrong.`
  ];

  const runtimeMessages = [
    `ğŸ”¥ Code blew up at runtime fam: ${error?.message ?? "Unknown crash"}`,
    `ğŸ¤¡ JS engine tripped over: ${error?.message ?? "??"}`,
    `ğŸš¨ Broke reality at runtime: ${error?.message ?? "??"}`
  ];

  const pool =
    type === "lex" ? lexMessages
    : type === "parse" ? parseMessages
    : runtimeMessages;

  return pool[Math.floor(Math.random() * pool.length)] ?? "Unknow error fam ğŸ¤·";
}

export const errorMessages = {
  "noCode": "ğŸ˜¤ Yo fam, gimme some code to vibe with.",
  "noOutput": "ğŸ˜¤ Yo fam, gimme some output to see.",
  "syntaxError": "ğŸ§¨ Syntax Error",
  "runtimeError": "ğŸ”¥ Code blew up at runtime fam",
}
